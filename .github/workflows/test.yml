name: Test

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Release tag
        required: true
      debug:
        description: Enable debug mode when set to 'true'
        required: false
        default: "false"

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    permissions:
      write-all
      # contents: write
      # pull-requests: write
    steps:
      - name: Set debug mode
        if: ${{ github.event.inputs.debug == 'true' }}
        run: |
          set -x
      - name: Set up environment
        env:
          TAG: "${{ github.event.inputs.tag }}"
        run: |
          echo "branch=$( echo "${TAG}" | cut -d '.' -f '-2' )" >> "${GITHUB_ENV}"
          echo "date=$(date +%F)" >> "${GITHUB_ENV}"
      - name: Check out docs
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: "./lorawan-stack-docs"
          ref: "master"
          repository: happyRip/lorawan-stack-docs
      - name: Setup git user
        working-directory: "./lorawan-stack-docs"
        env:
          TAG: "${{ github.event.inputs.tag }}"
        run: |
          git config user.name 'The Things Bot'
          git config user.email 'github@thethingsindustries.com'
          git status
          git checkout -b '${{ github.run_id }}-${{ github.run_attempt }}'
          git push --set-upstream origin '${{ github.run_id }}-${{ github.run_attempt }}'
          git status
      - name: Check out lorawan stack
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: "./lorawan-stack"
          # ref: "${{ github.event.inputs.tag }}"
          ref: "${{ env.branch }}"
          repository: happyRip/lorawan-stack
          ssh-key: "${{ secrets.LORAWAN_STACK_SSH_KEY }}"
      - name: Check out lorawan stack aws
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: "./lorawan-stack-aws"
          # ref: "${{ github.event.inputs.tag }}"
          ref: "${{ env.branch }}"
          repository: happyRip/lorawan-stack-aws
          ssh-key: "${{ secrets.LORAWAN_STACK_AWS_SSH_KEY }}"
      - name: Update whats-new
        working-directory: "./lorawan-stack-docs"
        env:
          BRANCH: "${{ env.branch }}"
          DATE: "${{ env.date }}"
          TAG: "${{ github.event.inputs.tag }}"
        run: |
          cp ../lorawan-stack/CHANGELOG.md .

          # Get changes
          TMP_FILE=$(mktemp)
          awk "/^## \[${TAG//v/}\]/{flag=1;next} /^## \[/{flag=0} flag" \
            'CHANGELOG.md' \
            > "${TMP_FILE}"

          CHANGES_FILE="./doc/content/whats-new/${TAG}.md"

          cat > "${CHANGES_FILE}" <<EOF
          ---
          date: ${DATE}
          title: "${TAG//v/}"
          featured: {}
          ---
          EOF
          cat "${TMP_FILE}" >> "${CHANGES_FILE}"

          git add "${CHANGES_FILE}"
      - name: Update AWS ECS Changelog
        working-directory: "./lorawan-stack-docs"
        run: |
          CHANGES_FILE='./doc/content/the-things-stack/host/aws/ecs/changelog/index.md'

          cp '../lorawan-stack-aws/UPGRADING.md' "${CHANGES_FILE}"

          git add "${CHANGES_FILE}"
      - name: Update doc version
        working-directory: "./lorawan-stack-docs"
        env:
          TAG: "${{ github.event.inputs.tag }}"
        run: |
          CONFIG_FILE='./doc/config/_default/config.toml'
          TAG="${TAG//v/}" # Remove 'v' from tag

          sed -r "s/version = \"([0-9]+\.){2}[0-9]+\"/version = \"${TAG}\"/" "${CONFIG_FILE}"

          git add "${CONFIG_FILE}"
      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version: "~1.21"
      - name: Download go dependencies
        working-directory: ./lorawan-stack/tools
        run: go mod download
      - name: Initialize mage binary cache
        id: mage-cache
        uses: actions/cache@v3
        with:
          path: ./lorawan-stack/tools/bin/mage
          key: ${{ runner.os }}-mage-${{ hashFiles('lorawan-stack/tools/**') }}
      - name: Make mage
        if: steps.mage-cache.outputs.cache-hit != 'true'
        working-directory: ./lorawan-stack
        run: make tools/bin/mage
      - name: Generate hugo data
        working-directory: "./lorawan-stack"
        run: tools/bin/mage ttiProto:hugoData
      - name: Sync hugo data
        working-directory: "./lorawan-stack-docs"
        run: |
          rsync --recursive --delete --remove-source-files '../lorawan-stack/api/ttn.lorawan.v3/' './doc/data/api/ttn.lorawan.v3/'
          rsync --recursive --delete --remove-source-files '../lorawan-stack/api/tti.lorawan.v3/' './doc/data/api/tti.lorawan.v3/'

          git add ./doc/data/api/tt{i,n}.lorawan.v3/
      - name: Export CLI documentation
        working-directory: "./lorawan-stack"
        run: |
          go build -tags 'tti' './cmd/tti-lw-cli'

          export HOME='$HOME'
          HOME='$HOME' ./tti-lw-cli 'gen-md-doc' -o '../lorawan-stack-docs/doc/content/ttn-lw-cli'
          HOME='$HOME' ./tti-lw-cli 'gen-json-tree' -o '../lorawan-stack-docs/doc/data/commands'

          # Replace links to 'end-devices/templates' with 'templates' as they are not exported correctly.
          sed -i 's/end-devices_templates/templates/g' '../lorawan-stack-docs/doc/content/ttn-lw-cli/ttn-lw-cli_end-devices.md'

          cd '../lorawan-stack-docs'
          git add ./doc/{content/ttn-lw-cli,data/commands}
      - name: Prepare merge PR
        working-directory: "./lorawan-stack-docs"
        env:
          TAG: "${{ github.event.inputs.tag }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          git commit -m "all: Release \`${TAG}\` documentation"
          git status
          git push
          gh pr create \
              --assignee '${{ github.actor }}' \
              --base 'master' \
              --body "This pull request merges back changes from the ${TAG} release." \
              --title "Release ${TAG}" \
